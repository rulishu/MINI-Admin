default:
  image: node:16

services:
  # - docker:20.10.16-dind
  - name: docker:19.03.13-dind
    command: 
      [
        "--registry-mirror=https://docker.mirrors.ustc.edu.cn",
        "--insecure-registry=192.168.188.222:5008"
      ]

stages:
  - build
  - deploy

Build Static:
  stage: build
  before_script: 
    - pwd
    - ls -al
    - npm -v
    - node -v
    - npm config get registry
    - npm install --force --registry=https://registry.npmmirror.com
  artifacts: 
    paths: 
      - dist
  script:
    - npm run build
    - git config --global user.email "bot@nihaosi.com"
    - git config --global user.name "GitLab Bot"
    - npm run deploy
  only:
    - main
    - tags

Docker Imgae Build Dev:
  stage: deploy
  image: docker/compose:1.27.4
  only:
    - main
  before_script:
    - docker info
    # - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin --insecure $CI_REGISTRY
  script:
    - pwd
    - ls -al
    - docker build --pull -t "$CI_REGISTRY_IMAGE"/ronghui-admin-dev:latest .
    - docker push "$CI_REGISTRY_IMAGE"/ronghui-admin-dev:latest
    - echo "$CI_REGISTRY"
    - echo "$CI_REGISTRY_USER"
    - echo "$CI_REGISTRY_IMAGE"/ronghui-admin-dev
    #   停止服务
    - docker-compose -p ronghui-admin-dev -f docker-compose.dev.yml down
    #   启动服务
    - docker-compose -p ronghui-admin-dev -f docker-compose.dev.yml up -d
    - if [ $(docker images $CI_REGISTRY_IMAGE/ronghui-admin-dev  -q -f dangling=true) ];then
    - docker rmi $(docker images $CI_REGISTRY_IMAGE/ronghui-admin-dev  -q -f dangling=true)
    - fi

#Docker Imgae Build:
#  stage: deploy
#  image: docker:19
#  only:
#    - tags
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - echo "$CI_COMMIT_TAG"
#    - VERSION=$(echo $CI_COMMIT_TAG | sed -e 's/^v//')
#    - echo $VERSION
#    - export V=$VERSION
#    - echo "$V"
#    - docker build --pull -t "$CI_REGISTRY_IMAGE"/hrflow:"$V" .
#    - docker push "$CI_REGISTRY_IMAGE"/hrflow:"$V"
#    - ls -al

